version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: ./_docker/app/Dockerfile
      target: php
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/vendor:/var/www/vendor
      - ./backend/node_modules:/var/www/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
    depends_on:
      - db
      - redis
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./_docker/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: teleshtorm_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql_db
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_secret
      MYSQL_DATABASE: laravel_mysql
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - app-network


  redis:
    image: redis:latest
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  python:
    image: python:3.10.12
    container_name: python_worker
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./python:/usr/src/app
    command: tail -f /dev/null
    networks:
      - app-network

volumes:
  pgdata:
  mysqldata:

networks:
  app-network:
    driver: bridge
